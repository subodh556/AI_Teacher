
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  created_at: 'created_at',
  last_login: 'last_login',
  preferences: 'preferences'
};

exports.Prisma.TopicScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  parent_id: 'parent_id',
  difficulty_level: 'difficulty_level'
};

exports.Prisma.ContentScalarFieldEnum = {
  id: 'id',
  topic_id: 'topic_id',
  title: 'title',
  content_type: 'content_type',
  content_data: 'content_data',
  difficulty_level: 'difficulty_level'
};

exports.Prisma.AssessmentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  topic_id: 'topic_id',
  adaptive: 'adaptive'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  assessment_id: 'assessment_id',
  question_text: 'question_text',
  question_type: 'question_type',
  options: 'options',
  correct_answer: 'correct_answer',
  difficulty_level: 'difficulty_level',
  explanation: 'explanation'
};

exports.Prisma.UserProgressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  topic_id: 'topic_id',
  proficiency_level: 'proficiency_level',
  last_interaction: 'last_interaction',
  completed: 'completed'
};

exports.Prisma.UserAssessmentScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  assessment_id: 'assessment_id',
  score: 'score',
  completed_at: 'completed_at',
  answers: 'answers'
};

exports.Prisma.AchievementScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  criteria: 'criteria',
  icon_url: 'icon_url'
};

exports.Prisma.UserAchievementScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  achievement_id: 'achievement_id',
  earned_at: 'earned_at'
};

exports.Prisma.StudyPlanScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  plan_data: 'plan_data',
  ai_generated: 'ai_generated'
};

exports.Prisma.UserGoalScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  description: 'description',
  target_value: 'target_value',
  current_value: 'current_value',
  goal_type: 'goal_type',
  topic_id: 'topic_id',
  start_date: 'start_date',
  end_date: 'end_date',
  completed: 'completed',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserActivityScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  activity_type: 'activity_type',
  activity_data: 'activity_data',
  topic_id: 'topic_id',
  duration: 'duration',
  created_at: 'created_at'
};

exports.Prisma.ProgressMetricScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  metric_type: 'metric_type',
  metric_value: 'metric_value',
  metric_data: 'metric_data',
  date: 'date'
};

exports.Prisma.UserStreakScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  current_streak: 'current_streak',
  longest_streak: 'longest_streak',
  last_active: 'last_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserLevelScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  current_level: 'current_level',
  experience: 'experience',
  next_level_exp: 'next_level_exp',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Topic: 'Topic',
  Content: 'Content',
  Assessment: 'Assessment',
  Question: 'Question',
  UserProgress: 'UserProgress',
  UserAssessment: 'UserAssessment',
  Achievement: 'Achievement',
  UserAchievement: 'UserAchievement',
  StudyPlan: 'StudyPlan',
  UserGoal: 'UserGoal',
  UserActivity: 'UserActivity',
  ProgressMetric: 'ProgressMetric',
  UserStreak: 'UserStreak',
  UserLevel: 'UserLevel'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
